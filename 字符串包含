问题描述：

给定两个分别由字母组成的字符串A和字符串B,字符串B的长度比字符串A短。请问，如何最快地判断字符串B中所有字母是否都在字符串A里？

为了简单起见，我们规定输入的字符串中只包含大写英文字母，请实现函数bool StringContains(String A, String B)。

例子：

如果是下面两个字符串：

String 1：ABCD

String 2：BAD

答案是true，即String2里的字母在String1里也都有，或者说String2是String1的真子集。

如果是下面两个字符串：

String 1：ABCD

String 2：BCE

答案是false，因为字符串String2里的E字母不在字符串String1里。

同时，如果string1：ABCD，string 2：AA，同样返回true。

解法一：

最直接最直观的方法：针对字符串B中的每个字符，逐个与字符串A中每个字符比较，看是否存在。

Java Code如下：
public class StringContain {

	public static void main(String[] args) {
		String A = "ABCD";
		String B = "BAD";
		System.out.println(stringContains(A, B));
	}

	/**
	 * 
	 * @param A
	 * @param B
	 * @return
	 */
	public static boolean stringContains(String A, String B) {

		for (int i = 0; i < B.length(); i++) {
			int j;
			for (j = 0; (j < A.length()) && (B.charAt(i) != A.charAt(j)); j++)
				;
			if(j == A.length())
				return false;
		}
		return true;
	}
}

假设字符串A的长度是m, 字符串B的长度是n, 那么该解法的时间复杂度是O(n*m)。显然，开销太大。

===========================================================================================

解法二：


